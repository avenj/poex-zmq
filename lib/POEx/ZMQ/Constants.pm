package POEx::ZMQ::Constants;

# Automatically generated by tools/zmq_constants.pl
use strict; use warnings FATAL => 'all';
use parent 'Exporter::Tiny';
our @EXPORT = our @EXPORT_ALL = qw/
  ZMQ_RATE
  ZMQ_MORE
  ZMQ_RECOVERY_IVL
  ZMQ_PLAIN_SERVER
  ZMQ_DEALER
  ZMQ_DONTWAIT
  ZMQ_PLAIN
  ZMQ_FAIL_UNROUTABLE
  ZMQ_PLAIN_PASSWORD
  ZMQ_FORWARDER
  ZMQ_PROBE_ROUTER
  ZMQ_ROUTER_RAW
  ZMQ_EVENT_BIND_FAILED
  ZMQ_IPV4ONLY
  ZMQ_RCVTIMEO
  ZMQ_RCVHWM
  ZMQ_MAX_SOCKETS
  ZMQ_CURVE
  ZMQ_CURVE_SECRETKEY
  ZMQ_MAXMSGSIZE
  ZMQ_TCP_KEEPALIVE_CNT
  ZMQ_REP
  ZMQ_UNSUBSCRIBE
  ZMQ_POLLERR
  ZMQ_NOBLOCK
  ZMQ_IPV6
  ZMQ_IO_THREADS_DFLT
  ZMQ_NULL
  ZMQ_MECHANISM
  ZMQ_XREQ
  ZMQ_POLLITEMS_DFLT
  ZMQ_RECONNECT_IVL
  ZMQ_ROUTER
  ZMQ_XREP
  ZMQ_TCP_ACCEPT_FILTER
  ZMQ_EVENT_DISCONNECTED
  ZMQ_CURVE_PUBLICKEY
  ZMQ_BACKLOG
  ZMQ_IDENTITY
  ZMQ_REQ_RELAXED
  ZMQ_EVENT_CLOSED
  ZMQ_ROUTER_BEHAVIOR
  ZMQ_SUBSCRIBE
  ZMQ_XPUB
  ZMQ_PULL
  ZMQ_PUSH
  ZMQ_EVENT_LISTENING
  ZMQ_PAIR
  ZMQ_ROUTER_MANDATORY
  ZMQ_RECONNECT_IVL_MAX
  ZMQ_SNDHWM
  ZMQ_CONFLATE
  ZMQ_PUB
  ZMQ_SNDBUF
  ZMQ_IO_THREADS
  ZMQ_STREAM
  ZMQ_EVENT_MONITOR_STOPPED
  ZMQ_EVENT_CONNECTED
  ZMQ_MAX_SOCKETS_DFLT
  ZMQ_EVENT_ACCEPTED
  ZMQ_REQ
  ZMQ_CURVE_SERVERKEY
  ZMQ_HAUSNUMERO
  ZMQ_POLLIN
  ZMQ_MULTICAST_HOPS
  ZMQ_QUEUE
  ZMQ_TCP_KEEPALIVE_IDLE
  ZMQ_STREAMER
  ZMQ_LINGER
  ZMQ_SUB
  ZMQ_REQ_CORRELATE
  ZMQ_EVENT_CONNECT_DELAYED
  ZMQ_DELAY_ATTACH_ON_CONNECT
  ZMQ_TYPE
  ZMQ_XPUB_VERBOSE
  ZMQ_EVENT_CLOSE_FAILED
  ZMQ_EVENTS
  ZMQ_ZAP_DOMAIN
  ZMQ_FD
  ZMQ_SNDMORE
  ZMQ_EVENT_CONNECT_RETRIED
  ZMQ_TCP_KEEPALIVE
  ZMQ_EVENT_ACCEPT_FAILED
  ZMQ_XSUB
  ZMQ_LAST_ENDPOINT
  ZMQ_SNDTIMEO
  ZMQ_PLAIN_USERNAME
  ZMQ_RCVMORE
  ZMQ_POLLOUT
  ZMQ_CURVE_SERVER
  ZMQ_RCVBUF
  ZMQ_IMMEDIATE
  ZMQ_AFFINITY
  ZMQ_TCP_KEEPALIVE_INTVL
/;

sub ZMQ_RATE () { 8 }
sub ZMQ_MORE () { 1 }
sub ZMQ_RECOVERY_IVL () { 9 }
sub ZMQ_PLAIN_SERVER () { 44 }
sub ZMQ_DEALER () { 5 }
sub ZMQ_DONTWAIT () { 1 }
sub ZMQ_PLAIN () { 1 }
sub ZMQ_FAIL_UNROUTABLE () { 33 }
sub ZMQ_PLAIN_PASSWORD () { 46 }
sub ZMQ_FORWARDER () { 2 }
sub ZMQ_PROBE_ROUTER () { 51 }
sub ZMQ_ROUTER_RAW () { 41 }
sub ZMQ_EVENT_BIND_FAILED () { 16 }
sub ZMQ_IPV4ONLY () { 31 }
sub ZMQ_RCVTIMEO () { 27 }
sub ZMQ_RCVHWM () { 24 }
sub ZMQ_MAX_SOCKETS () { 2 }
sub ZMQ_CURVE () { 2 }
sub ZMQ_CURVE_SECRETKEY () { 49 }
sub ZMQ_MAXMSGSIZE () { 22 }
sub ZMQ_TCP_KEEPALIVE_CNT () { 35 }
sub ZMQ_REP () { 4 }
sub ZMQ_UNSUBSCRIBE () { 7 }
sub ZMQ_POLLERR () { 4 }
sub ZMQ_NOBLOCK () { 1 }
sub ZMQ_IPV6 () { 42 }
sub ZMQ_IO_THREADS_DFLT () { 1 }
sub ZMQ_NULL () { 0 }
sub ZMQ_MECHANISM () { 43 }
sub ZMQ_XREQ () { 5 }
sub ZMQ_POLLITEMS_DFLT () { 16 }
sub ZMQ_RECONNECT_IVL () { 18 }
sub ZMQ_ROUTER () { 6 }
sub ZMQ_XREP () { 6 }
sub ZMQ_TCP_ACCEPT_FILTER () { 38 }
sub ZMQ_EVENT_DISCONNECTED () { 512 }
sub ZMQ_CURVE_PUBLICKEY () { 48 }
sub ZMQ_BACKLOG () { 19 }
sub ZMQ_IDENTITY () { 5 }
sub ZMQ_REQ_RELAXED () { 53 }
sub ZMQ_EVENT_CLOSED () { 128 }
sub ZMQ_ROUTER_BEHAVIOR () { 33 }
sub ZMQ_SUBSCRIBE () { 6 }
sub ZMQ_XPUB () { 9 }
sub ZMQ_PULL () { 7 }
sub ZMQ_PUSH () { 8 }
sub ZMQ_EVENT_LISTENING () { 8 }
sub ZMQ_PAIR () { 0 }
sub ZMQ_ROUTER_MANDATORY () { 33 }
sub ZMQ_RECONNECT_IVL_MAX () { 21 }
sub ZMQ_SNDHWM () { 23 }
sub ZMQ_CONFLATE () { 54 }
sub ZMQ_PUB () { 1 }
sub ZMQ_SNDBUF () { 11 }
sub ZMQ_IO_THREADS () { 1 }
sub ZMQ_STREAM () { 11 }
sub ZMQ_EVENT_MONITOR_STOPPED () { 1024 }
sub ZMQ_EVENT_CONNECTED () { 1 }
sub ZMQ_MAX_SOCKETS_DFLT () { 1023 }
sub ZMQ_EVENT_ACCEPTED () { 32 }
sub ZMQ_REQ () { 3 }
sub ZMQ_CURVE_SERVERKEY () { 50 }
sub ZMQ_HAUSNUMERO () { 156384712 }
sub ZMQ_POLLIN () { 1 }
sub ZMQ_MULTICAST_HOPS () { 25 }
sub ZMQ_QUEUE () { 3 }
sub ZMQ_TCP_KEEPALIVE_IDLE () { 36 }
sub ZMQ_STREAMER () { 1 }
sub ZMQ_LINGER () { 17 }
sub ZMQ_SUB () { 2 }
sub ZMQ_REQ_CORRELATE () { 52 }
sub ZMQ_EVENT_CONNECT_DELAYED () { 2 }
sub ZMQ_DELAY_ATTACH_ON_CONNECT () { 39 }
sub ZMQ_TYPE () { 16 }
sub ZMQ_XPUB_VERBOSE () { 40 }
sub ZMQ_EVENT_CLOSE_FAILED () { 256 }
sub ZMQ_EVENTS () { 15 }
sub ZMQ_ZAP_DOMAIN () { 55 }
sub ZMQ_FD () { 14 }
sub ZMQ_SNDMORE () { 2 }
sub ZMQ_EVENT_CONNECT_RETRIED () { 4 }
sub ZMQ_TCP_KEEPALIVE () { 34 }
sub ZMQ_EVENT_ACCEPT_FAILED () { 64 }
sub ZMQ_XSUB () { 10 }
sub ZMQ_LAST_ENDPOINT () { 32 }
sub ZMQ_SNDTIMEO () { 28 }
sub ZMQ_PLAIN_USERNAME () { 45 }
sub ZMQ_RCVMORE () { 13 }
sub ZMQ_POLLOUT () { 2 }
sub ZMQ_CURVE_SERVER () { 47 }
sub ZMQ_RCVBUF () { 12 }
sub ZMQ_IMMEDIATE () { 39 }
sub ZMQ_AFFINITY () { 4 }
sub ZMQ_TCP_KEEPALIVE_INTVL () { 37 }

1;
 # Generated at Fri Jul 18 02:08:06 2014

=pod

=head1 NAME

POEx::ZMQ::Constants - ZeroMQ (3 + 4) constants for use with POEx::ZMQ

=head1 SYNOPSIS

  # All ZeroMQ v3 + v4 constants:
  use POEx::ZMQ::Constants -all;
  # Specific constants:
  use POEx::ZMQ::Constants qw/ZMQ_ROUTER ZMQ_DEALER/;

=head1 DESCRIPTION

ZeroMQ constant exporter for use with L<POEx::ZMQ> applications.

Automatically generated from ZeroMQ version 3 & 4 headers.

Uses L<Exporter::Tiny>; look there for detailed import-related documentation.

=head1 AUTHOR

Jon Portnoy <avenj@cobaltirc.org>

=cut

